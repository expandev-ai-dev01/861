name: Deploy Node.js Backend to Azure Web App

on:
  workflow_dispatch:
  # Push trigger comentado para evitar deploy automático no primeiro commit
  # Descomente as linhas abaixo se quiser deploy automático em futuros pushes:
  # push:
  #   branches:
  #     - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Validate package.json
        working-directory: ./backend
        run: |
          # Verificar se package.json existe
          if [ ! -f "package.json" ]; then
            echo "ERROR: package.json not found in backend folder!"
            exit 1
          fi

          # Verificar se tem script start (necessário para Azure)
          if ! grep -q '"start"' package.json; then
            echo "ERROR: No 'start' script found in package.json!"
            echo "Add a start script to your package.json, like:"
            echo '  "start": "node index.js" or "start": "node dist/index.js"'
            exit 1
          fi

          echo "✓ package.json validated"

      - name: npm install, build, and test
        working-directory: ./backend
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present -- --passWithNoTests || true

      - name: Zip artifact for deployment
        working-directory: ./backend
        run: |
          echo "Backend folder contents before zip:"
          ls -la
          echo "Creating zip with all files including node_modules..."
          zip -r ../release.zip . -x "*.git*"
          cd ..
          echo "Release zip created, size:"
          ls -lh release.zip
          echo "Checking zip contents:"
          unzip -l release.zip | head -20

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          echo "Checking for package.json:"
          if [ -f "package.json" ]; then
            echo "package.json found!"
            head -5 package.json
          else
            echo "ERROR: package.json not found!"
          fi

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.APP_NAME_BACKEND }}
          publish-profile: ${{ secrets.BACKEND_PUBLISH_PROFILE }}
          package: .

      - name: Verify deployment health
        run: |
          echo "Waiting for deployment to be ready..."
          APP_URL="https://${{ secrets.APP_NAME_BACKEND }}.azurewebsites.net"

          for i in {1..12}; do
            echo "Health check attempt $i/12..."

            # Tentar acessar a URL do app (pode ser /health, /api/health ou /)
            for ENDPOINT in "/health" "/api/health" "/"; do
              HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$APP_URL$ENDPOINT" || echo "000")

              if [ "$HTTP_CODE" == "200" ] || [ "$HTTP_CODE" == "304" ]; then
                echo "✅ Backend is healthy! (HTTP $HTTP_CODE at $ENDPOINT)"
                echo "Deployment successful: $APP_URL"
                exit 0
              fi
            done

            if [ "$HTTP_CODE" != "000" ]; then
              echo "⚠️ Backend returned HTTP $HTTP_CODE"
            else
              echo "Backend not responding yet..."
            fi

            if [ $i -lt 12 ]; then
              echo "Waiting 15 seconds before next check..."
              sleep 15
            fi
          done

          echo "❌ Backend health check failed after 3 minutes"
          echo "Please check the deployment at: $APP_URL"
          exit 1